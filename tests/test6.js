// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Test 6: Modify a gym', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Update Gym', async function() {
    // Test name: Update Gym
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1630x1320 | 
    await driver.manage().window().setRect({ width: 1630, height: 1320 })
    // 3 | click | linkText=List a Gym | 
    await driver.findElement(By.linkText("List a Gym")).click()
    // 4 | type | id=name | a
    await driver.findElement(By.id("name")).sendKeys("a")
    // 5 | type | id=description | a
    await driver.findElement(By.id("description")).sendKeys("a")
    // 6 | type | id=notes | a
    await driver.findElement(By.id("notes")).sendKeys("a")
    // 7 | type | id=location-street | a
    await driver.findElement(By.id("location-street")).sendKeys("a")
    // 8 | type | id=location-state | a
    await driver.findElement(By.id("location-state")).sendKeys("a")
    // 9 | type | id=location-city | a
    await driver.findElement(By.id("location-city")).sendKeys("a")
    // 10 | type | id=location-zip | 95819
    await driver.findElement(By.id("location-zip")).sendKeys("95819")
    // 11 | click | id=action-tab-1 | 
    await driver.findElement(By.id("action-tab-1")).click()
    // 12 | mouseOut | id=action-tab-1 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 13 | mouseDown | id=Equipment | 
    {
      const element = await driver.findElement(By.id("Equipment"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    // 14 | mouseUp | css=#menu- > .MuiBackdrop-root | 
    {
      const element = await driver.findElement(By.css("#menu- > .MuiBackdrop-root"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    // 15 | click | css=body | 
    await driver.findElement(By.css("body")).click()
    // 16 | click | css=.MuiMenuItem-root:nth-child(4) | 
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(4)")).click()
    // 17 | click | id=equip-details | 
    await driver.findElement(By.id("equip-details")).click()
    // 18 | mouseOver | css=.MuiButton-root | 
    {
      const element = await driver.findElement(By.css(".MuiButton-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 19 | type | id=equip-details | a
    await driver.findElement(By.id("equip-details")).sendKeys("a")
    // 20 | click | css=.MuiButton-root | 
    await driver.findElement(By.css(".MuiButton-root")).click()
    // 21 | click | id=action-tab-2 | 
    await driver.findElement(By.id("action-tab-2")).click()
    // 22 | click | name=mui-19 | 
    await driver.findElement(By.name("mui-19")).click()
    // 23 | click | name=mui-21 | 
    await driver.findElement(By.name("mui-21")).click()
    // 24 | mouseOver | id=action-tab-3 | 
    {
      const element = await driver.findElement(By.id("action-tab-3"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 25 | click | id=action-tab-3 | 
    await driver.findElement(By.id("action-tab-3")).click()
    // 26 | mouseOut | id=action-tab-3 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 27 | click | css=.css-1lwbda4-MuiStack-root .MuiSvgIcon-root | 
    await driver.findElement(By.css(".css-1lwbda4-MuiStack-root .MuiSvgIcon-root")).click()
    // 28 | mouseOver | css=.MuiIconButton-edgeStart > .MuiSvgIcon-root | 
    {
      const element = await driver.findElement(By.css(".MuiIconButton-edgeStart > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 29 | click | css=.MuiIconButton-edgeStart > .MuiSvgIcon-root | 
    await driver.findElement(By.css(".MuiIconButton-edgeStart > .MuiSvgIcon-root")).click()
    // 30 | mouseOut | css=.MuiIconButton-edgeStart > .MuiSvgIcon-root | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 31 | click | css=.MuiDayPicker-weekContainer:nth-child(5) > .MuiButtonBase-root:nth-child(2) | 
    await driver.findElement(By.css(".MuiDayPicker-weekContainer:nth-child(5) > .MuiButtonBase-root:nth-child(2)")).click()
    // 32 | mouseOver | css=.MuiToggleButton-root:nth-child(2) | 
    {
      const element = await driver.findElement(By.css(".MuiToggleButton-root:nth-child(2)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 33 | click | css=.MuiToggleButton-root:nth-child(2) | 
    await driver.findElement(By.css(".MuiToggleButton-root:nth-child(2)")).click()
    // 34 | mouseOut | css=.MuiToggleButton-root:nth-child(2) | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 35 | click | css=.MuiToggleButton-root:nth-child(4) | 
    await driver.findElement(By.css(".MuiToggleButton-root:nth-child(4)")).click()
    // 36 | click | css=.css-nen11g-MuiStack-root > .MuiFormControl-root:nth-child(1) .MuiSvgIcon-root | 
    await driver.findElement(By.css(".css-nen11g-MuiStack-root > .MuiFormControl-root:nth-child(1) .MuiSvgIcon-root")).click()
    // 37 | click | css=.MuiClock-squareMask | 
    await driver.findElement(By.css(".MuiClock-squareMask")).click()
    // 38 | click | css=.MuiFormControl-root:nth-child(2) .MuiSvgIcon-root | 
    await driver.findElement(By.css(".MuiFormControl-root:nth-child(2) .MuiSvgIcon-root")).click()
    // 39 | click | css=.MuiClock-pmButton > .MuiTypography-root | 
    await driver.findElement(By.css(".MuiClock-pmButton > .MuiTypography-root")).click()
    // 40 | click | css=.MuiClock-squareMask | 
    await driver.findElement(By.css(".MuiClock-squareMask")).click()
    // 41 | click | id=booking-notice | 
    await driver.findElement(By.id("booking-notice")).click()
    // 42 | type | id=booking-notice | 1
    await driver.findElement(By.id("booking-notice")).sendKeys("1")
    // 43 | click | id=cancel-notice | 
    await driver.findElement(By.id("cancel-notice")).click()
    // 44 | type | id=cancel-notice | 2
    await driver.findElement(By.id("cancel-notice")).sendKeys("2")
    // 45 | click | id=action-tab-0 | 
    await driver.findElement(By.id("action-tab-0")).click()
    // 46 | mouseOver | css=.MuiButtonBase-root:nth-child(6) | 
    {
      const element = await driver.findElement(By.css(".MuiButtonBase-root:nth-child(6)"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 47 | click | css=.MuiButtonBase-root:nth-child(6) | 
    await driver.findElement(By.css(".MuiButtonBase-root:nth-child(6)")).click()
    // 48 | click | css=.MuiButtonBase-root > .MuiTypography-root | 
    await driver.findElement(By.css(".MuiButtonBase-root > .MuiTypography-root")).click()
    // 49 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
    // 50 | click | css=.MuiSvgIcon-fontSizeLarge > path | 
    await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge > path")).click()
    // 51 | click | linkText=Profile | 
    await driver.findElement(By.linkText("Profile")).click()
    // 52 | click | id=simple-tab-1 | 
    await driver.findElement(By.id("simple-tab-1")).click()
    // 53 | click | css=.MuiTableRow-root:nth-child(3) a | 
    await driver.findElement(By.css(".MuiTableRow-root:nth-child(3) a")).click()
    // 54 | click | id=name | 
    await driver.findElement(By.id("name")).click()
    // 55 | type | id=name | New Gym Name
    await driver.findElement(By.id("name")).sendKeys("New Gym Name")
    // 56 | click | id=action-tab-3 | 
    await driver.findElement(By.id("action-tab-3")).click()
    // 57 | click | id=action-tab-0 | 
    await driver.findElement(By.id("action-tab-0")).click()
    // 58 | click | css=.MuiButtonBase-root:nth-child(6) | 
    await driver.findElement(By.css(".MuiButtonBase-root:nth-child(6)")).click()
  })
  it('Delete Gym', async function() {
    // Test name: Delete Gym
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1630x1320 | 
    await driver.manage().window().setRect({ width: 1630, height: 1320 })
    // 3 | mouseOver | css=.MuiSvgIcon-fontSizeLarge | 
    {
      const element = await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 4 | click | css=.MuiSvgIcon-fontSizeLarge | 
    await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge")).click()
    // 5 | mouseOut | css=.MuiSvgIcon-fontSizeLarge | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 6 | mouseOver | linkText=Profile | 
    {
      const element = await driver.findElement(By.linkText("Profile"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 7 | click | linkText=Profile | 
    await driver.findElement(By.linkText("Profile")).click()
    // 8 | mouseOut | css=.MuiButtonBase-root:nth-child(2) > .makeStyles-sublink-4 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 9 | mouseOver | id=simple-tab-1 | 
    {
      const element = await driver.findElement(By.id("simple-tab-1"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 10 | click | id=simple-tab-1 | 
    await driver.findElement(By.id("simple-tab-1")).click()
    // 11 | mouseOut | id=simple-tab-1 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 12 | click | css=.MuiTableRow-root:nth-child(3) .MuiButton-label | 
    await driver.findElement(By.css(".MuiTableRow-root:nth-child(3) .MuiButton-label")).click()
    // 13 | click | css=.swal2-confirm | 
    await driver.findElement(By.css(".swal2-confirm")).click()
    // 14 | click | id=simple-tab-1 | 
    await driver.findElement(By.id("simple-tab-1")).click()
    // 15 | click | id=simple-tab-1 | 
    await driver.findElement(By.id("simple-tab-1")).click()
  })
})
