// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Test 1: Login / Logout', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function waitForWindow(timeout = 2) {
    await driver.sleep(timeout)
    const handlesThen = vars["windowHandles"]
    const handlesNow = await driver.getAllWindowHandles()
    if (handlesNow.length > handlesThen.length) {
      return handlesNow.find(handle => (!handlesThen.includes(handle)))
    }
    throw new Error("New window did not appear before timeout")
  }
  it('Login / Logout', async function() {
    // Test name: Login / Logout
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1634x1324 | 
    await driver.manage().window().setRect({ width: 1634, height: 1324 })
    // 3 | mouseOver | css=.MuiSvgIcon-fontSizeLarge | 
    {
      const element = await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 4 | click | css=.MuiSvgIcon-fontSizeLarge | 
    await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge")).click()
    // 5 | mouseOut | css=.MuiSvgIcon-fontSizeLarge | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 6 | click | linkText=Login | 
    await driver.findElement(By.linkText("Login")).click()
    // 7 | click | css=div > svg | 
    vars["windowHandles"] = await driver.getAllWindowHandles()
    // 8 | storeWindowHandle | root | 
    await driver.findElement(By.css("div > svg")).click()
    // 9 | selectWindow | handle=${win3885} | 
    vars["win3885"] = await waitForWindow(2000)
    // 10 | click | css=.w1I7fb | 
    vars["root"] = await driver.getWindowHandle()
    // 11 | selectWindow | handle=${root} | 
    await driver.switchTo().window(vars["win3885"])
    // 12 | mouseOver | css=.MuiSvgIcon-fontSizeLarge | 
    await driver.findElement(By.css(".w1I7fb")).click()
    // 13 | mouseOut | css=.MuiSvgIcon-fontSizeLarge | 
    await driver.switchTo().window(vars["root"])
    // 14 | click | css=.MuiSvgIcon-fontSizeLarge > path | 
    {
      const element = await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 15 | click | linkText=Logout | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css(".MuiSvgIcon-fontSizeLarge > path")).click()
    await driver.findElement(By.linkText("Logout")).click()
  })
})
