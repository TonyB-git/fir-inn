// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const imWaiting = () => {
  return 0;
}

describe('Upload Gym', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Upload Gym', async function() {
    // Test name: Upload Gym
    // Step # | name | target | value
    // 1 | open | / | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 1630x1320 | 
    await driver.manage().window().setRect({ width: 1630, height: 1320 })

    await driver.wait(() => imWaiting, 100000);
    // 3 | click | xpath=//div[@id='root']/div/span/header/div/div/a[2] | 
    await driver.findElement(By.xpath("//div[@id=\'root\']/div/span/header/div/div/a[2]")).click()

    // 4 | type | id=name | Matthew's Gym
    await driver.wait(() => imWaiting, 100000);
    await driver.findElement(By.id("name")).sendKeys("Matthew\'s Gym")
    // 5 | type | id=description | Matt's home gym
    await driver.findElement(By.id("description")).sendKeys("Matt\'s home gym")
    // 6 | type | id=max-guests | 5
    await driver.findElement(By.id("max-guests")).sendKeys("5")
    // 7 | type | id=notes | Use code '2112'
    await driver.findElement(By.id("notes")).sendKeys("Use code \'2112\'")
    // 8 | type | id=location-street | Sacramento Street
    await driver.findElement(By.id("location-street")).sendKeys("Sacramento Street")
    // 9 | type | id=location-city | Sacramento
    await driver.findElement(By.id("location-city")).sendKeys("Sacramento")
    // 10 | type | id=location-state | CA
    await driver.findElement(By.id("location-state")).sendKeys("CA")
    // 11 | type | id=location-zip | 95819
    await driver.findElement(By.id("location-zip")).sendKeys("95819")
    // 12 | click | css=#action-tab-1 | 
    await driver.findElement(By.css("#action-tab-1")).click()
    // 13 | click | css=#Equipment | 
    await driver.findElement(By.css("#Equipment")).click()
    // 14 | click | css=.MuiMenuItem-root:nth-child(4) | 
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(4)")).click()
    // 15 | click | id=equip-details | 
    await driver.findElement(By.id("equip-details")).click()
    // 16 | mouseOver | css=.MuiButton-sizeLarge | 
    {
      const element = await driver.findElement(By.css(".MuiButton-sizeLarge"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 17 | type | id=equip-details | 10-50 lb
    await driver.findElement(By.id("equip-details")).sendKeys("10-50 lb")
    // 18 | click | css=.MuiButton-sizeLarge | 
    await driver.findElement(By.css(".MuiButton-sizeLarge")).click()
    // 19 | click | id=action-tab-2 | 
    await driver.findElement(By.id("action-tab-2")).click()
    // 20 | click | name=mui-87 | 
    await driver.findElement(By.name("mui-87")).click()
    // 21 | click | name=mui-88 | 
    await driver.findElement(By.name("mui-88")).click()
    // 22 | click | name=mui-89 | 
    await driver.findElement(By.name("mui-89")).click()
    // 23 | mouseDown | css=.MuiSelect-select | 
    {
      const element = await driver.findElement(By.css(".MuiSelect-select"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    // 24 | mouseUp | css=#menu- > .MuiBackdrop-root | 
    {
      const element = await driver.findElement(By.css("#menu- > .MuiBackdrop-root"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    // 25 | click | css=body | 
    await driver.findElement(By.css("body")).click()
    // 26 | click | css=#menu- .MuiButtonBase-root:nth-child(3) | 
    await driver.findElement(By.css("#menu- .MuiButtonBase-root:nth-child(3)")).click()
    // 27 | mouseOver | id=action-tab-3 | 
    {
      const element = await driver.findElement(By.id("action-tab-3"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 28 | click | id=action-tab-3 | 
    await driver.findElement(By.id("action-tab-3")).click()
    // 29 | mouseOut | id=action-tab-3 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 30 | mouseOver | css=.css-1lwbda4-MuiStack-root path | 
    {
      const element = await driver.findElement(By.css(".css-1lwbda4-MuiStack-root path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 31 | click | css=.css-1lwbda4-MuiStack-root path | 
    await driver.findElement(By.css(".css-1lwbda4-MuiStack-root path")).click()
    // 32 | mouseOut | css=.css-1lwbda4-MuiStack-root path | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 33 | click | css=.MuiIconButton-edgeStart > .MuiSvgIcon-root | 
    await driver.findElement(By.css(".MuiIconButton-edgeStart > .MuiSvgIcon-root")).click()
    // 34 | click | css=.MuiDayPicker-weekContainer:nth-child(4) > .MuiButtonBase-root:nth-child(3) | 
    await driver.findElement(By.css(".MuiDayPicker-weekContainer:nth-child(4) > .MuiButtonBase-root:nth-child(3)")).click()
    // 35 | click | css=.MuiToggleButton-root:nth-child(2) | 
    await driver.findElement(By.css(".MuiToggleButton-root:nth-child(2)")).click()
    // 36 | click | css=.MuiToggleButton-root:nth-child(4) | 
    await driver.findElement(By.css(".MuiToggleButton-root:nth-child(4)")).click()
    // 37 | click | css=.MuiButtonBase-root:nth-child(6) | 
    await driver.findElement(By.css(".MuiButtonBase-root:nth-child(6)")).click()
    // 38 | click | css=.css-nen11g-MuiStack-root > .MuiFormControl-root:nth-child(1) .MuiSvgIcon-root | 
    await driver.findElement(By.css(".css-nen11g-MuiStack-root > .MuiFormControl-root:nth-child(1) .MuiSvgIcon-root")).click()
    // 39 | mouseOver | css=.MuiClock-pmButton > .MuiTypography-root | 
    {
      const element = await driver.findElement(By.css(".MuiClock-pmButton > .MuiTypography-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 40 | click | css=.MuiClock-pmButton > .MuiTypography-root | 
    await driver.findElement(By.css(".MuiClock-pmButton > .MuiTypography-root")).click()
    // 41 | mouseOut | css=.MuiClock-pmButton > .MuiTypography-root | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 42 | click | css=.MuiClock-squareMask | 
    await driver.findElement(By.css(".MuiClock-squareMask")).click()
    // 43 | mouseOver | css=.MuiFormControl-root:nth-child(2) .MuiButtonBase-root | 
    {
      const element = await driver.findElement(By.css(".MuiFormControl-root:nth-child(2) .MuiButtonBase-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 44 | click | css=.MuiFormControl-root:nth-child(2) .MuiButtonBase-root | 
    await driver.findElement(By.css(".MuiFormControl-root:nth-child(2) .MuiButtonBase-root")).click()
    // 45 | mouseOut | css=.MuiFormControl-root:nth-child(2) .MuiButtonBase-root | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 46 | click | css=.MuiClock-squareMask | 
    await driver.findElement(By.css(".MuiClock-squareMask")).click()
    // 47 | mouseOver | css=.MuiFormControl-root:nth-child(2) .MuiSvgIcon-root | 
    {
      const element = await driver.findElement(By.css(".MuiFormControl-root:nth-child(2) .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 48 | click | css=.MuiFormControl-root:nth-child(2) .MuiSvgIcon-root | 
    await driver.findElement(By.css(".MuiFormControl-root:nth-child(2) .MuiSvgIcon-root")).click()
    // 49 | mouseOut | css=.MuiFormControl-root:nth-child(2) .MuiSvgIcon-root | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 50 | mouseOver | css=.MuiClock-pmButton > .MuiTypography-root | 
    {
      const element = await driver.findElement(By.css(".MuiClock-pmButton > .MuiTypography-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 51 | click | css=.MuiClock-pmButton > .MuiTypography-root | 
    await driver.findElement(By.css(".MuiClock-pmButton > .MuiTypography-root")).click()
    // 52 | mouseOut | css=.MuiClock-pmButton > .MuiTypography-root | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 53 | click | css=.MuiClock-squareMask | 
    await driver.findElement(By.css(".MuiClock-squareMask")).click()
    // 54 | click | id=hourly-rate | 
    await driver.findElement(By.id("hourly-rate")).click()
    // 55 | mouseDownAt | id=hourly-rate | 12.880615234375,23.29852294921875
    {
      const element = await driver.findElement(By.id("hourly-rate"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    // 56 | mouseMoveAt | id=hourly-rate | 12.880615234375,23.29852294921875
    {
      const element = await driver.findElement(By.id("hourly-rate"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 57 | mouseUpAt | id=hourly-rate | 12.880615234375,23.29852294921875
    {
      const element = await driver.findElement(By.id("hourly-rate"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    // 58 | click | id=hourly-rate | 
    await driver.findElement(By.id("hourly-rate")).click()
    // 59 | type | id=hourly-rate | 20
    await driver.findElement(By.id("hourly-rate")).sendKeys("20")
    // 60 | click | id=booking-notice | 
    await driver.findElement(By.id("booking-notice")).click()
    // 61 | type | id=booking-notice | 2
    await driver.findElement(By.id("booking-notice")).sendKeys("2")
    // 62 | mouseDown | id=cancel-notice | 
    {
      const element = await driver.findElement(By.id("cancel-notice"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    // 63 | mouseUp | id=cancel-notice-label | 
    {
      const element = await driver.findElement(By.id("cancel-notice-label"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    // 64 | click | css=div:nth-child(4) > .MuiFormControl-root:nth-child(2) | 
    await driver.findElement(By.css("div:nth-child(4) > .MuiFormControl-root:nth-child(2)")).click()
    // 65 | type | id=cancel-notice | 24
    await driver.findElement(By.id("cancel-notice")).sendKeys("24")
    // 66 | click | css=.MuiButton-root | 
    await driver.findElement(By.css(".MuiButton-root")).click()
    // 67 | click | css=.MuiButton-text | 
    await driver.findElement(By.css(".MuiButton-text")).click()
    // 68 | assertAlert | Gym Submitted | 
    assert(await driver.switchTo().alert().getText() == "Gym Submitted")
    // 69 | mouseOver | id=action-tab-1 | 
    {
      const element = await driver.findElement(By.id("action-tab-1"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 70 | mouseOut | id=action-tab-1 | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
  })
})